<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <logRotator>
    <daysToKeep>-1</daysToKeep>
    <numToKeep>100</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>10</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.openshift.OpenShiftBuilderSizeJobProperty>
      <builderSize>small</builderSize>
    </hudson.plugins.openshift.OpenShiftBuilderSizeJobProperty>
    <hudson.plugins.openshift.OpenShiftBuilderTypeJobProperty>
      <builderType>ceylon-0.5</builderType>
    </hudson.plugins.openshift.OpenShiftBuilderTypeJobProperty>
    <hudson.plugins.openshift.OpenShiftBuilderTimeoutJobProperty>
      <builderTimeout>300000</builderTimeout>
    </hudson.plugins.openshift.OpenShiftBuilderTimeoutJobProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name></name>
        <refspec></refspec>
        <url>UPSTREAM_REPO_URL</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>**</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <clean>false</clean>
    <wipeOutWorkspace>false</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir></relativeTargetDir>
    <excludedRegions></excludedRegions>
    <excludedUsers></excludedUsers>
    <gitConfigName></gitConfigName>
    <gitConfigEmail></gitConfigEmail>
    <skipTag>false</skipTag>
    <scmName></scmName>
  </scm>
  <assignedNode>JOB_NAME</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers class="vector"/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>
source /usr/libexec/openshift/cartridges/abstract/info/lib/jenkins_util

#jenkins_rsync UPSTREAM_SSH:~/.m2/ ~/.m2/
jenkins_rsync UPSTREAM_SSH:~/app-root/data/ceylon/repo/ ~/app-root/data/ceylon/repo/

# Build setup and run user pre_build and build
. ci_build.sh

#export MAVEN_OPTS="$OPENSHIFT_MAVEN_XMX"
#mvn --global-settings $OPENSHIFT_MAVEN_MIRROR clean package -Popenshift -DskipTests

JAVA_OPTS="-Dceylon.cache.repo=~/app-root/data/ceylon/repo/cache"
JAVA_OPTS="$JAVA_OPTS -Dcom.redhat.ceylon.common.tool.terminal.width=9999" #do not wrap output

export JAVA_OPTS
export PRESERVE_JAVA_OPTS="true"

ceylon_repos="--rep http://modules.ceylon-lang.org/test/"
ceylon_repos="${ceylon_repos} --rep ~/app-root/data/ceylon/repo/"
ceylon_repos="${ceylon_repos} --rep ~/$WORKSPACE/.openshift/config/modules"

compile_files=`find ~/app-root/repo/source/ -name *\.ceylon -o -name *\.java`
printf "Compiling files:\n$compile_files\n"
${CEYLON_HOME}/bin/ceylon compile --src ~/app-root/repo/source --out ~/app-root/data/ceylon/repo ${ceylon_repos} ${compile_files}


# Deploy new build

# Stop app
jenkins_stop_app UPSTREAM_SSH

# Push content back to application

jenkins_rsync ~/app-root/data/ceylon/repo/ $UPSTREAM_SSH:~/app-root/data/ceylon/repo/

jenkins_rsync ~/$WORKSPACE/.openshift/ $UPSTREAM_SSH:~/app-root/repo/.openshift/
  
# Configure / start app
#$GIT_SSH UPSTREAM_SSH deploy.sh

jenkins_start_app UPSTREAM_SSH

#$GIT_SSH UPSTREAM_SSH post_deploy.sh
      </command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>**</artifacts>
      <latestOnly>false</latestOnly>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers/>
</project>
